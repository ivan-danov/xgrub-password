#!/bin/bash

#*******************************************************************************
#*                                XGrubPassword                                *
#*-----------------------------------------------------------------------------*
#*                                                                             *
#* Copyright (c) 2022 Ivan Danov                                               *
#*                                                                             *
#* MIT License                                                                 *
#*                                                                             *
#* Permission is hereby granted, free of charge, to any person obtaining a     *
#* copy of this software and associated documentation files (the "Software"),  *
#* to deal in the Software without restriction, including without limitation   *
#* the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
#* and/or sell copies of the Software, and to permit persons to whom the       *
#* Software is furnished to do so, subject to the following conditions:        *
#*                                                                             *
#* The above copyright notice and this permission notice shall be included     *
#* in all copies or substantial portions of the Software.                      *
#*                                                                             *
#* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS     *
#* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *
#* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
#* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
#* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
#* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
#* DEALINGS IN THE SOFTWARE.                                                   *
#*******************************************************************************

set -eu

# echo "DEBUG: xgrub-password-update called, $# args: $@"
echo "DEBUG: xgrub-password-update called, $# args: $@" >> /tmp/xgrub-password-update.log

CONFFILE=/etc/xgrub-password/42_xgrub_password
OUTFILE=/etc/grub.d/42_xgrub_password

update_flag=0

if [ -f "${CONFFILE}" ]; then

# 	echo "DEBUG: conf file ${CONFFILE}" >> /tmp/xgrub-password-update.log

	# set user/password
	cp "${CONFFILE}" "${OUTFILE}"
	chmod 0755 "${OUTFILE}"

	# set 'unrestricted' to start os
	GRUB_FILE=/etc/grub.d/10_linux
	OLD_STR='CLASS="--class gnu-linux --class gnu --class os"'
	NEW_STR='CLASS="--class gnu-linux --class gnu --class os --unrestricted"'

	if [ $(grep -c "${OLD_STR}" "${GRUB_FILE}") -ge 0 ]; then
		sed 's/'"${OLD_STR}"'/'"${NEW_STR}"'/' -i "${GRUB_FILE}"
		update_flag=1
	fi

	# set 'unrestricted' to start other os-es
	GRUB_FILE=/etc/grub.d/30_os-prober

	# shellcheck disable=SC2016
	OLD_STR='--class os \$menuentry_id_option'
	# shellcheck disable=SC2016
	NEW_STR='--class os --unrestricted \$menuentry_id_option'
	if [ $(grep -c "${OLD_STR}" "${GRUB_FILE}") -ge 0 ]; then
		sed 's/'"${OLD_STR}"'/'"${NEW_STR}"'/' -i "${GRUB_FILE}"
		update_flag=1
	fi
else
# 	echo "DEBUG: NO conf file ${CONFFILE}" >> /tmp/xgrub-password-update.log

	# remove user/password
	rm -f "${OUTFILE}"

	# remove 'unrestricted' to start os
	GRUB_FILE=/etc/grub.d/10_linux
	OLD_STR='CLASS="--class gnu-linux --class gnu --class os"'
	NEW_STR='CLASS="--class gnu-linux --class gnu --class os --unrestricted"'
	if [ $(grep -c "${NEW_STR}" "${GRUB_FILE}") -ge 0 ]; then
		sed 's/'"${NEW_STR}"'/'"${OLD_STR}"'/' -i "${GRUB_FILE}"
		update_flag=1
	fi

	# remove 'unrestricted' to start other os-es
	GRUB_FILE=/etc/grub.d/30_os-prober
	# shellcheck disable=SC2016
	OLD_STR='--class os \\$menuentry_id_option'
	# shellcheck disable=SC2016
	NEW_STR='--class os --unrestricted \\$menuentry_id_option'
	if [ $(grep -c "${NEW_STR}" "${GRUB_FILE}") -ge 0 ]; then
		sed 's/'"${NEW_STR}"'/'"${OLD_STR}"'/' -i "${GRUB_FILE}"
		update_flag=1
	fi
fi

if [ ${update_flag} -eq 1 ]; then
	# update grub
	update-grub
else
	echo "DEBUG: xgrub-password-update: update_flag=0" >> /tmp/xgrub-password-update.log
fi

sync
